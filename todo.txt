decorators
    -make decorator decorator to easily create decorators that take input

sampling_machine
    -make parallel

classes
    -near zero variance filter (make sure to save which rows are removed w/ fit & transform)

binning_machine
    -predict_proba

sparse_filtering
    -rewrite to be more clear / efficient
    -rewrite in cython

to make:
    -elm transform(n_hidden, activation function)
        -elm transform with l1 feature selection
    -exploration
    -visualization
    -feature creation file
        -update generic_feature_creation to use num->cat and cat->num
        -create function for creating features from a list of dates
            -start time
            -length
            -end time
            -number of occurences
            -avg time between occurences
            -max time between occurences
            -min time between occurences
            -etc ?
        -use sklearn.semi_supervised for imputation
    -spearmint-lite wrapper
        -ability to add / remove runs manually
        -compile with Cython
    -par_quick_save / par_quick_load / par_quick_write
    -qsave / qload / qsave / qload / qwrite / qread (no need directory)
